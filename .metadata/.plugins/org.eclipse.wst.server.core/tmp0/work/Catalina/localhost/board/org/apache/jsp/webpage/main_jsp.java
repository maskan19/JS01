/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2021-02-24 00:45:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.webpage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"kr\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>Bootstrap Example</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <style>\r\n");
      out.write("    /* Remove the navbar's default margin-bottom and rounded borders */ \r\n");
      out.write("    .navbar {\r\n");
      out.write("      margin-bottom: 0;\r\n");
      out.write("      border-radius: 0;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */\r\n");
      out.write("    .row.content {height: 450px}\r\n");
      out.write("    \r\n");
      out.write("    /* Set gray background color and 100% height */\r\n");
      out.write("    .sidenav {\r\n");
      out.write("      padding-top: 20px;\r\n");
      out.write("      background-color: #f1f1f1;\r\n");
      out.write("      height: 100%;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* Set black background color, white text and some padding */\r\n");
      out.write("    footer {\r\n");
      out.write("      background-color: #555;\r\n");
      out.write("      color: white;\r\n");
      out.write("      padding: 15px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* On small screens, set height to 'auto' for sidenav and grid */\r\n");
      out.write("    @media screen and (max-width: 767px) {\r\n");
      out.write("      .sidenav {\r\n");
      out.write("        height: auto;\r\n");
      out.write("        padding: 15px;\r\n");
      out.write("      }\r\n");
      out.write("      .row.content {height:auto;} \r\n");
      out.write("    }\r\n");
      out.write("    .log{\r\n");
      out.write("      background : #F4A460\r\n");
      out.write("    }\r\n");
      out.write("    #ilogo{\r\n");
      out.write("      width : 100px;\r\n");
      out.write("      height : 30px;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write(" <script>\r\n");
      out.write("  $(function(){\r\n");
      out.write("\t \r\n");
      out.write("\t  $('.dropdown').on('click', function(){\r\n");
      out.write("\t\t menu =  $('.dropdown-toggle', this).text();  //주메뉴 \r\n");
      out.write("\t\t submenu = $('.dropdown-menu li a', this).text(); //부메뉴\r\n");
      out.write("\t\t //console.log(menu);\r\n");
      out.write("\t\t //console.log(submenu);\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t //map()을 이용해서 부메뉴(submenu)를 분리한다 -\r\n");
      out.write("\t\t //sub2 배열로 생성한다\r\n");
      out.write("\t\t sub2 = $('.dropdown-menu li a', this).map(function(){\r\n");
      out.write("\t\t\t   return   $(this).text();\r\n");
      out.write("\t\t })\r\n");
      out.write("\t\t console.log(sub2);\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t \r\n");
      out.write("\t\t code ='  <div class=\"list-group\">';\r\n");
      out.write("\t\t code +=' <a href=\"#\" class=\"list-group-item disabled active\">' + menu +'</a>';\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t $.each(sub2, function(i, v){\r\n");
      out.write("\t\t\tcode += '<a href=\"#\" class=\"list-group-item\">' + v + '</a>';\r\n");
      out.write("\t\t })\r\n");
      out.write("\t\t code += '</div>';\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t $('.sidenav1').html(code);\r\n");
      out.write("\t  })\r\n");
      out.write("\t  //왼쪽 사이드바 메뉴 클릭 이벤트(delegate방식)\r\n");
      out.write("\t  $(\".sidenav1\").on('click', '.list-group-item', function(){  //this를 list-group-item으로\r\n");
      out.write("\t\t  console.log($(this).attr('class'));\r\n");
      out.write("\t  if($(this).attr('class').match('disabled')) return;\r\n");
      out.write("\t  vtext = $(this).text();//부메뉴의 문자들을 가져온다.\r\n");
      out.write("\t  $('.text-left h1').text(vtext);\r\n");
      out.write("\t  })\r\n");
      out.write("\t  $('.dropdown-menu li a, #myNavbar li a').on('click', function(){\r\n");
      out.write("\t\t  vtext=$(this).text();\r\n");
      out.write("\t  $('.text-left h1').text(vtext);\r\n");
      out.write("\t\t  \r\n");
      out.write("\t  })\r\n");
      out.write("\t  \r\n");
      out.write("  })\r\n");
      out.write(" </script>\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "content.jsp", out, false);
      out.write("\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
